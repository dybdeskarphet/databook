"""
This type stub file was generated by pyright.
"""

import numpy as np
from typing import Literal, NamedTuple
from ._typing import Array, DType, JustFloat, JustInt, Namespace

if np.__version__[0] == "2":
    ...
else:
    ...
def cross(x1: Array, x2: Array, /, xp: Namespace, *, axis: int = ..., **kwargs: object) -> Array:
    ...

def outer(x1: Array, x2: Array, /, xp: Namespace, **kwargs: object) -> Array:
    ...

class EighResult(NamedTuple):
    eigenvalues: Array
    eigenvectors: Array
    ...


class QRResult(NamedTuple):
    Q: Array
    R: Array
    ...


class SlogdetResult(NamedTuple):
    sign: Array
    logabsdet: Array
    ...


class SVDResult(NamedTuple):
    U: Array
    S: Array
    Vh: Array
    ...


def eigh(x: Array, /, xp: Namespace, **kwargs: object) -> EighResult:
    ...

def qr(x: Array, /, xp: Namespace, *, mode: Literal["reduced", "complete"] = ..., **kwargs: object) -> QRResult:
    ...

def slogdet(x: Array, /, xp: Namespace, **kwargs: object) -> SlogdetResult:
    ...

def svd(x: Array, /, xp: Namespace, *, full_matrices: bool = ..., **kwargs: object) -> SVDResult:
    ...

def cholesky(x: Array, /, xp: Namespace, *, upper: bool = ..., **kwargs: object) -> Array:
    ...

def matrix_rank(x: Array, /, xp: Namespace, *, rtol: float | Array | None = ..., **kwargs: object) -> Array:
    ...

def pinv(x: Array, /, xp: Namespace, *, rtol: float | Array | None = ..., **kwargs: object) -> Array:
    ...

def matrix_norm(x: Array, /, xp: Namespace, *, keepdims: bool = ..., ord: Literal[1, 2, -1, -2] | JustFloat | Literal["fro", "nuc"] | None = ...) -> Array:
    ...

def svdvals(x: Array, /, xp: Namespace) -> Array | tuple[Array, ...]:
    ...

def vector_norm(x: Array, /, xp: Namespace, *, axis: int | tuple[int, ...] | None = ..., keepdims: bool = ..., ord: JustInt | JustFloat = ...) -> Array:
    ...

def diagonal(x: Array, /, xp: Namespace, *, offset: int = ..., **kwargs: object) -> Array:
    ...

def trace(x: Array, /, xp: Namespace, *, offset: int = ..., dtype: DType | None = ..., **kwargs: object) -> Array:
    ...

__all__ = ['cross', 'matmul', 'outer', 'tensordot', 'EighResult', 'QRResult', 'SlogdetResult', 'SVDResult', 'eigh', 'qr', 'slogdet', 'svd', 'cholesky', 'matrix_rank', 'pinv', 'matrix_norm', 'matrix_transpose', 'svdvals', 'vecdot', 'vector_norm', 'diagonal', 'trace']
_all_ignore = ...
def __dir__() -> list[str]:
    ...

