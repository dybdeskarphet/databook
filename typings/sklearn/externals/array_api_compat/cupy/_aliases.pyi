"""
This type stub file was generated by pyright.
"""

import cupy as cp
from typing import Optional
from ..common import _aliases
from ..common._typing import NestedSequence, SupportsBufferProtocol
from ._typing import Array, DType, Device

bool = ...
acos = ...
acosh = ...
asin = ...
asinh = ...
atan = ...
atan2 = ...
atanh = ...
bitwise_left_shift = ...
bitwise_invert = ...
bitwise_right_shift = ...
concat = ...
pow = ...
arange = ...
empty = ...
empty_like = ...
eye = ...
full = ...
full_like = ...
linspace = ...
ones = ...
ones_like = ...
zeros = ...
zeros_like = ...
UniqueAllResult = ...
UniqueCountsResult = ...
UniqueInverseResult = ...
unique_all = ...
unique_counts = ...
unique_inverse = ...
unique_values = ...
std = ...
var = ...
cumulative_sum = ...
cumulative_prod = ...
clip = ...
permute_dims = ...
reshape = ...
argsort = ...
sort = ...
nonzero = ...
ceil = ...
floor = ...
trunc = ...
matmul = ...
matrix_transpose = ...
tensordot = ...
sign = ...
finfo = ...
iinfo = ...
def asarray(obj: (Array | bool | int | float | complex | NestedSequence[bool | int | float | complex] | SupportsBufferProtocol), /, *, dtype: Optional[DType] = ..., device: Optional[Device] = ..., copy: Optional[bool] = ..., **kwargs) -> Array:
    """
    Array API compatibility wrapper for asarray().

    See the corresponding documentation in the array library and/or the array API
    specification for more details.
    """
    ...

def astype(x: Array, dtype: DType, /, *, copy: bool = ..., device: Optional[Device] = ...) -> Array:
    ...

def count_nonzero(x: Array, axis=..., keepdims=...) -> Array:
    ...

def take_along_axis(x: Array, indices: Array, /, *, axis: int = ...):
    ...

if hasattr(cp, 'vecdot'):
    vecdot = ...
else:
    vecdot = ...
if hasattr(cp, 'isdtype'):
    isdtype = ...
else:
    isdtype = ...
if hasattr(cp, 'unstack'):
    unstack = ...
else:
    unstack = ...
__all__ = _aliases.__all__ + ['__array_namespace_info__', 'asarray', 'astype', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'bitwise_left_shift', 'bitwise_invert', 'bitwise_right_shift', 'bool', 'concat', 'count_nonzero', 'pow', 'sign', 'take_along_axis']
_all_ignore = ...
